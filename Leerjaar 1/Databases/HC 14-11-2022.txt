2e hoorcollege Databases.

Klassendiagram brengt in kaart welke gegevens we
belangrijk vinden.

Vandaag gaan we all een stap verder.

Maak de huiswerkopdracht thuis al om te oefenen.

Les 1: Gegevensmodel
Les 2 (vandaag): Relationeel Representatiemodel
Les 3: Relationeel Implementatiemodel
Les 4: Database

Het gegevensmodel is een communicatiemiddel.

Lekker lang praten over wat we de vorige week hebben
gedaan.

Als je een associatieklasse gebruikt is een pijl en
werkwoordvervoeging overbodig ** EN VERBODEN **
Als je wel een pijl en werkwoordvervoeging neerzet
dan gaan er punten af op het tentamen.

Naam van klassen zijn ** ALTIJD ENKELVOUD **
Naam van attributen zijn ** ALTIJD ENKELVOUD **

Hoe lossen we veel op veel relaties op met en zonder
associatieklasse?
Gegevensmodel -> Relationeel representatiemodel.
Stap 1: Vertaal klassen -> relaties
- Elke basisklasse (geen associatieklasse) wordt
een tabel
- Elk attribuut van de klasse is een kolom van de
tabel

<naam tabel> (<naam attribuut>,...)

Stap 2: Primaire sleutel (PK)
Kies in elke tabel een primaire sleutel (basisklassen)
Deze moet aan de volgende eisen voldoen:
1. Moet uniek zijn
2. Mag niet leeg zijn (niet NULL)
3. Mag samengesteld zijn (combinatie van attributen)
4. Zo klein mogelijk (zo weinig mogelijk attributen)

NULL = missende waarde, Java equiv: null (= ~void)

Voorbeelden:
1. Studentnummer

Als geen van de attributen uniek zijn:
1. Je kan een extra attribuut toevoegen wat uniek is.
	Geef dat dan ook aan in de relaties van stap 1.
	Dat doe je door het attribuut te onderstrepen.
	Voor leesbaarheid: PK als eerste attribuut.
2. Je kan een samengestelde sleutel gebruiken.

Stap 3: Bepaal foreign keys (vreemde sleutels), FK obv
de associaties
1e voorbeeld
Bij een 1 op * of 0..1 op * relatie is de 
FK van de *-kant hetzelfde als de PK van de 1-kant of
0..1-kant.

2e voorbeeld (eigen voorbeeld, niet uit HC)
Bij deze relaties:
	1..* op *
	* op *
	1..* op 1..*
	* op 1..*

Moet er een tussentabel bij.
	De tussentabel bevat 2 PK's die ook FK zijn.
	Deze zijn de PK's van de 2 tabellen die gekoppeld
	worden.

Relatieclassificatie uit een klassendiagram:
	Als er aan beide kanten van de relatielijn een
	sterretje staat (of 1..*, of 0..*, of iets met
	een sterretje). Dan is het een veel-op-veel relatie

	Als er aan 1 kant een sterretje staat, dan is het
	een 1 op veel relatie.

	Als er nergens een sterretje staat, dan is het een
	1 op 1 relatie.

Extra informatie:
	Als je tot de 3e normaalvorm hebt genormaliseerd
	dan heb je géén 1 op 1 relaties.

	In een relationeel implementatiemodel zitten geen
	veel op veel relaties meer.

Primairy key: onderstrepen met doorgetrokken steep in
relationeel representatiemodel.

<kolom> is primaire sleutel.

Foreign key: onderstrepen met streepjeslijn in
relationeel representatiemodel of cursief schrijven.

Op de toets mag je "Foreign-key" of "Vreemde sleutel"
gebruiken. Beide zijn goed.

<kolom> is vreemde sleutel verwijst naar <primaire sleutel-naam>
in <tabel-naam>, null (niet) toegestaan.

"niet" kan wel of niet worden toegevoegd.

*** ALS ER 2 kolomen de primaire sleutel zijn dan: ***

(kolom1, kolom2) is de primaire sleutel.

Alle kolommen die de PK zijn moeten door 1 en dezelfde streep zijn
onderstreept in het relationeel representatiemodel.
*** NIET 2 losse strepen ***

Bij een veel op veel relatie is er 1 primaire sleutel bestaande uit
meerdere kolommen. En ** ELKE PRIMAIRE SLEUTELKOLOM ** is een vreemde sleutel.
Je vermeld dus meerdere keren:
<kolom> is vreemde sleutel verwijst naar <primaire sleutel-naam>
in <tabel-naam>, null (niet) toegestaan.
1 keer per vreemde sleutel.

Primaire sleutel is NOOIT null, dus je hoeft ** niet ** te specificeren
of null is toegestaan of niet.

Dan nu de 1 op 1 relatie, gelukkig is die een stuk makkelijker.
Dat is als de maximale cardinaliteit 1 is aan beide kanten.

Je kunt aan een kant naar keuze een vreemde sleutel toevoegen naar de
primaire sleutel van de andere kant.

De andere optie is dat je de vreemde sleutel toevoegt in de ANDERE tabel.

*** LET OP! ***
In het geval van een 0..1 op 1, of een 1 op 0..1 of een 0..1 op 0..1 relatie
moet je in sommige gevallen "null toegestaan" toevoegen bij de vreemde sleutel.

Voorkeur: voorkom "null toegestaan"

***** GA ** NIET ** AAN BEIDE KANTEN EEN VREEMDE SLEUTEL TOEVOEGEN *****

Bij een 1 op veel relatie neem je de primaire sleutel van de 1 kant op in de
tabel aan de veel kant.

HUISWERKOPDRACHT: Zet het gegevensmodel om in een relationeel representatiemodel.
Dit betreft de Yomo opdracht.

Q & A:
Q: Gaan we in week 12 SQL doen?
A: Nee, relationeel implementatiemodel